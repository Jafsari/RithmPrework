Javascript Errors

1. The throw keyword is used to return an error and stop code execution.
2. The finally block is used to execute regardless of an error being thrown.
3. A TypeError occurs when you make an incorrect use of certain types in javascript. For exmaple, invoking something that isn't a function or accessing properties on undefined.
A ReferenceError on other hand occurs when we try to access a variable that doesn't exist within the scope.

4. To create a snippet you go into the sources tab, and click on the snippets Tab. Afterwards, right click and click on new.

5. An exception is throwing your own error.

6. To catch errors in Javascript you throw in your own error. An example would be 

try {
    if(Math.random() >= .5) {
        throw "Let's make an error!";   
    }
    console.log("Whew...we made it.");
    console.log("We can only get here if the random number is less than .5.");
} catch(e){
    console.log("The error is ", e);
    console.log("We can only get here if an error was thrown. (Random number is greater than .5).");
} 

console.log("Moving on.....");

Part 1

1.The type of error that would be thrown is a ReferenceError. The error is occuring because the variable is out of scope. To fix it you would have to declare person inside of a function.

2. The error is a TypeError, the error is occuring because the object is trying to be invoked. To fix that error you would have to not invoke the object.

3. TypeError, this codei s trying to assign a property of foo on undefined, which you can't do.

4.ReferenceError, thing can not be accessed outside of its scope. To fix that you would have to delete thing after invoking the function.

Part II

1. To fix this code, you would have to switch the i to less than 5. The loop will not start since 0 is not greater than 5.

for(var i = 0; i < 5; i ++){
	console.log(i)
}

2. For this function, you have to always compare the number 0 with 3 equal signs. 

function addIfEven(num){
	if (num  % 2 === 0) {
	return num + 5;
	}
	return num;
}

3. Inside the loop, they are using commas instead of semi colons. To fix that you would have to replace the commas with semi- colons.

function loopToFive(){
	for(var i = 0; i < 5; i ++) {
	console.log(i)
	}
}

4. Each part of the for loop should be seperated by a ;, and the for loop shouldn't end with a semicolon. The if statement shouldn't have a semi colon either after and you should look until i < numbers.length.
To compare with 0 you have to use === instead of a single equal sign.

You need to check if the if conditio checks the value their at and not the entire numbers array.
Instead of pushing in the index, evenNumbers should have the number pushed into it.

Need to make sure the return happens after the for loop is finished.

function displayEvenNumbers(){
    var numbers = [1,2,3,4,5,6,7,8]
    var evenNumbers = []
    for(var i=0; i<numbers.length; i++){
        if(numbers[i] % 2 === 0) {
            evenNumbers.push(numbers[i])
        }
    }
	return evenNumbers;
}